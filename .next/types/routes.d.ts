// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/gallery" | "/landing" | "/members" | "/news" | "/news/create" | "/structure/dpc" | "/structure/dpd" | "/structure/dprt" | "/structure/sayap"
type PageRoutes = "/Index" | "/LandingPageManagement" | "/news/NewsListPage"
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = "/api/placeholder/[[...path]]"
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes


interface ParamMap {
  "/": {}
  "/api/placeholder/[[...path]]": { "path"?: string[]; }
  "/gallery": {}
  "/Index": {}
  "/landing": {}
  "/LandingPageManagement": {}
  "/members": {}
  "/news": {}
  "/news/create": {}
  "/news/NewsListPage": {}
  "/structure/dpc": {}
  "/structure/dpd": {}
  "/structure/dprt": {}
  "/structure/sayap": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }
}
